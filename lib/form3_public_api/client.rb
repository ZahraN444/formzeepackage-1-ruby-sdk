# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  #  form3_public_api client class.
  class Client
    include CoreLibrary
    attr_reader :config, :auth_managers

    # Returns the configured authentication OAuth2 instance.
    def o_auth2
      @auth_managers['OAuth2']
    end

    # Access to audit controller.
    # @return [AuditController] Returns the controller instance.
    def audit
      @audit ||= AuditController.new @global_configuration
    end

    # Access to scheme_file_api controller.
    # @return [SchemeFileAPIController] Returns the controller instance.
    def scheme_file_api
      @scheme_file_api ||= SchemeFileAPIController.new @global_configuration
    end

    # Access to transaction_file_api controller.
    # @return [TransactionFileAPIController] Returns the controller instance.
    def transaction_file_api
      @transaction_file_api ||= TransactionFileAPIController.new @global_configuration
    end

    # Access to metrics_api controller.
    # @return [MetricsAPIController] Returns the controller instance.
    def metrics_api
      @metrics_api ||= MetricsAPIController.new @global_configuration
    end

    # Access to reports controller.
    # @return [ReportsController] Returns the controller instance.
    def reports
      @reports ||= ReportsController.new @global_configuration
    end

    # Access to scheme_messages controller.
    # @return [SchemeMessagesController] Returns the controller instance.
    def scheme_messages
      @scheme_messages ||= SchemeMessagesController.new @global_configuration
    end

    # Access to subscriptions controller.
    # @return [SubscriptionsController] Returns the controller instance.
    def subscriptions
      @subscriptions ||= SubscriptionsController.new @global_configuration
    end

    # Access to oauth2 controller.
    # @return [Oauth2Controller] Returns the controller instance.
    def oauth2
      @oauth2 ||= Oauth2Controller.new @global_configuration
    end

    # Access to accounts controller.
    # @return [AccountsController] Returns the controller instance.
    def accounts
      @accounts ||= AccountsController.new @global_configuration
    end

    # Access to account_identification controller.
    # @return [AccountIdentificationController] Returns the controller instance.
    def account_identification
      @account_identification ||= AccountIdentificationController.new @global_configuration
    end

    # Access to branches controller.
    # @return [BranchesController] Returns the controller instance.
    def branches
      @branches ||= BranchesController.new @global_configuration
    end

    # Access to branch_identification controller.
    # @return [BranchIdentificationController] Returns the controller instance.
    def branch_identification
      @branch_identification ||= BranchIdentificationController.new @global_configuration
    end

    # Access to name_verification_api controller.
    # @return [NameVerificationAPIController] Returns the controller instance.
    def name_verification_api
      @name_verification_api ||= NameVerificationAPIController.new @global_configuration
    end

    # Access to payments controller.
    # @return [PaymentsController] Returns the controller instance.
    def payments
      @payments ||= PaymentsController.new @global_configuration
    end

    # Access to organisations controller.
    # @return [OrganisationsController] Returns the controller instance.
    def organisations
      @organisations ||= OrganisationsController.new @global_configuration
    end

    # Access to platformsecurityapi controller.
    # @return [PlatformsecurityapiController] Returns the controller instance.
    def platformsecurityapi
      @platformsecurityapi ||= PlatformsecurityapiController.new @global_configuration
    end

    # Access to roles controller.
    # @return [RolesController] Returns the controller instance.
    def roles
      @roles ||= RolesController.new @global_configuration
    end

    # Access to ace controller.
    # @return [ACEController] Returns the controller instance.
    def ace
      @ace ||= ACEController.new @global_configuration
    end

    # Access to users controller.
    # @return [UsersController] Returns the controller instance.
    def users
      @users ||= UsersController.new @global_configuration
    end

    # Access to claims controller.
    # @return [ClaimsController] Returns the controller instance.
    def claims
      @claims ||= ClaimsController.new @global_configuration
    end

    # Access to direct_debits controller.
    # @return [DirectDebitsController] Returns the controller instance.
    def direct_debits
      @direct_debits ||= DirectDebitsController.new @global_configuration
    end

    # Access to mandates controller.
    # @return [MandatesController] Returns the controller instance.
    def mandates
      @mandates ||= MandatesController.new @global_configuration
    end

    # Access to query_api controller.
    # @return [QueryApiController] Returns the controller instance.
    def query_api
      @query_api ||= QueryApiController.new @global_configuration
    end

    # Access to account_validation controller.
    # @return [AccountValidationController] Returns the controller instance.
    def account_validation
      @account_validation ||= AccountValidationController.new @global_configuration
    end

    # Access to o_auth_authorization controller.
    # @return [OAuthAuthorizationController] Returns the controller instance.
    def o_auth_authorization
      @o_auth_authorization ||= OAuthAuthorizationController.new @global_configuration
    end

    def initialize(
      connection: nil, adapter: :net_http_persistent, timeout: 60,
      max_retries: 0, retry_interval: 1, backoff_factor: 2,
      retry_statuses: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
      retry_methods: %i[get put], http_callback: nil,
      environment: Environment::PRODUCTION, basic_credentials: nil,
      o_auth2_credentials: nil, config: nil
    )
      @config = if config.nil?
                  Configuration.new(connection: connection, adapter: adapter,
                                    timeout: timeout, max_retries: max_retries,
                                    retry_interval: retry_interval,
                                    backoff_factor: backoff_factor,
                                    retry_statuses: retry_statuses,
                                    retry_methods: retry_methods,
                                    http_callback: http_callback,
                                    environment: environment,
                                    basic_credentials: basic_credentials,
                                    o_auth2_credentials: o_auth2_credentials)
                else
                  config
                end

      @global_configuration = GlobalConfiguration.new(client_configuration: @config)
                                                 .base_uri_executor(@config.method(:get_base_uri))
                                                 .global_errors(BaseController::GLOBAL_ERRORS)
                                                 .user_agent(BaseController.user_agent)

      initialize_auth_managers(@global_configuration)
      @global_configuration = @global_configuration.auth_managers(@auth_managers)
    end

    # Initializes the auth managers hash used for authenticating API calls.
    # @param [GlobalConfiguration] global_config The global configuration of the SDK)
    def initialize_auth_managers(global_config)
      @auth_managers = {}
      http_client_config = global_config.client_configuration
      %w[Basic OAuth2].each { |auth| @auth_managers[auth] = nil }
      @auth_managers['Basic'] = Basic.new(http_client_config.basic_credentials)
      @auth_managers['OAuth2'] = OAuth2.new(http_client_config.o_auth2_credentials, global_config)
    end
  end
end
