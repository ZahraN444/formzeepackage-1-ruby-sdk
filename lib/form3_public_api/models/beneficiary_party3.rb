# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # BeneficiaryParty3 Model.
  class BeneficiaryParty3 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Name of beneficiary as given with account
    # @return [String]
    attr_accessor :account_name

    # Beneficiary account number
    # @return [String]
    attr_accessor :account_number

    # The type of identification given at `account_number` attribute
    # @return [AccountNumberCodeEnum]
    attr_accessor :account_number_code

    # The type of the account given with `beneficiary_party.account_number`.
    # Single digit number. Only required if requested by the beneficiary party.
    # Defaults to 0.
    # @return [Integer]
    attr_accessor :account_type

    # Information about the financial institution servicing the account.
    # @return [AccountHoldingEntity]
    attr_accessor :account_with

    # Beneficiary address
    # @return [Array[String]]
    attr_accessor :address

    # Building number of the Debtor address
    # @return [String]
    attr_accessor :building_number

    # City/Town of the Debtor address
    # @return [String]
    attr_accessor :city

    # Country of the beneficiary address, ISO 3166 format country code
    # @return [String]
    attr_accessor :country

    # Beneficiary name
    # @return [String]
    attr_accessor :name

    # Post code of the Debtor address
    # @return [String]
    attr_accessor :post_code

    # Post code of the Debtor address
    # @return [PrivateIdentification]
    attr_accessor :private_identification

    # Province of the Debtor address
    # @return [String]
    attr_accessor :province

    # Street name of the Debtor address
    # @return [String]
    attr_accessor :street_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'account_name'
      @_hash['account_number'] = 'account_number'
      @_hash['account_number_code'] = 'account_number_code'
      @_hash['account_type'] = 'account_type'
      @_hash['account_with'] = 'account_with'
      @_hash['address'] = 'address'
      @_hash['building_number'] = 'building_number'
      @_hash['city'] = 'city'
      @_hash['country'] = 'country'
      @_hash['name'] = 'name'
      @_hash['post_code'] = 'post_code'
      @_hash['private_identification'] = 'private_identification'
      @_hash['province'] = 'province'
      @_hash['street_name'] = 'street_name'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        account_number
        account_number_code
        account_type
        account_with
        address
        building_number
        city
        country
        name
        post_code
        private_identification
        province
        street_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name = SKIP,
                   account_number = SKIP,
                   account_number_code = SKIP,
                   account_type = SKIP,
                   account_with = SKIP,
                   address = SKIP,
                   building_number = SKIP,
                   city = SKIP,
                   country = SKIP,
                   name = SKIP,
                   post_code = SKIP,
                   private_identification = SKIP,
                   province = SKIP,
                   street_name = SKIP)
      @account_name = account_name unless account_name == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_number_code = account_number_code unless account_number_code == SKIP
      @account_type = account_type unless account_type == SKIP
      @account_with = account_with unless account_with == SKIP
      @address = address unless address == SKIP
      @building_number = building_number unless building_number == SKIP
      @city = city unless city == SKIP
      @country = country unless country == SKIP
      @name = name unless name == SKIP
      @post_code = post_code unless post_code == SKIP
      @private_identification = private_identification unless private_identification == SKIP
      @province = province unless province == SKIP
      @street_name = street_name unless street_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('account_name') ? hash['account_name'] : SKIP
      account_number =
        hash.key?('account_number') ? hash['account_number'] : SKIP
      account_number_code =
        hash.key?('account_number_code') ? hash['account_number_code'] : SKIP
      account_type = hash.key?('account_type') ? hash['account_type'] : SKIP
      account_with = AccountHoldingEntity.from_hash(hash['account_with']) if hash['account_with']
      address = hash.key?('address') ? hash['address'] : SKIP
      building_number =
        hash.key?('building_number') ? hash['building_number'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      country = hash.key?('country') ? hash['country'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      post_code = hash.key?('post_code') ? hash['post_code'] : SKIP
      private_identification = PrivateIdentification.from_hash(hash['private_identification']) if
        hash['private_identification']
      province = hash.key?('province') ? hash['province'] : SKIP
      street_name = hash.key?('street_name') ? hash['street_name'] : SKIP

      # Create object from extracted values.
      BeneficiaryParty3.new(account_name,
                            account_number,
                            account_number_code,
                            account_type,
                            account_with,
                            address,
                            building_number,
                            city,
                            country,
                            name,
                            post_code,
                            private_identification,
                            province,
                            street_name)
    end
  end
end
