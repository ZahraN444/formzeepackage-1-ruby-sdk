# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # QueryAttributes Model.
  class QueryAttributes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[RequestForInformationAgent]]
    attr_accessor :agents

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :auto_handled

    # TODO: Write general description for this method
    # @return [RequestForInformationCreatorParty]
    attr_accessor :creator_party

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :message_id

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :processing_date

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :query_sub_types

    # TODO: Write general description for this method
    # @return [QueryTypeEnum]
    attr_accessor :query_type

    # TODO: Write general description for this method
    # @return [Array[RequestForInformationReference]]
    attr_accessor :references

    # TODO: Write general description for this method
    # @return [Array[RequestForInformationRequestedInformation]]
    attr_accessor :requested_information

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :scheme_transaction_id

    # TODO: Write general description for this method
    # @return [ReportRequestStatusEnum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :unstructured_message

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['agents'] = 'agents'
      @_hash['auto_handled'] = 'auto_handled'
      @_hash['creator_party'] = 'creator_party'
      @_hash['message_id'] = 'message_id'
      @_hash['processing_date'] = 'processing_date'
      @_hash['query_sub_types'] = 'query_sub_types'
      @_hash['query_type'] = 'query_type'
      @_hash['references'] = 'references'
      @_hash['requested_information'] = 'requested_information'
      @_hash['scheme_transaction_id'] = 'scheme_transaction_id'
      @_hash['status'] = 'status'
      @_hash['unstructured_message'] = 'unstructured_message'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        agents
        auto_handled
        creator_party
        message_id
        processing_date
        query_sub_types
        references
        requested_information
        scheme_transaction_id
        status
        unstructured_message
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(query_type = nil,
                   agents = SKIP,
                   auto_handled = SKIP,
                   creator_party = SKIP,
                   message_id = SKIP,
                   processing_date = SKIP,
                   query_sub_types = SKIP,
                   references = SKIP,
                   requested_information = SKIP,
                   scheme_transaction_id = SKIP,
                   status = SKIP,
                   unstructured_message = SKIP)
      @agents = agents unless agents == SKIP
      @auto_handled = auto_handled unless auto_handled == SKIP
      @creator_party = creator_party unless creator_party == SKIP
      @message_id = message_id unless message_id == SKIP
      @processing_date = processing_date unless processing_date == SKIP
      @query_sub_types = query_sub_types unless query_sub_types == SKIP
      @query_type = query_type
      @references = references unless references == SKIP
      @requested_information = requested_information unless requested_information == SKIP
      @scheme_transaction_id = scheme_transaction_id unless scheme_transaction_id == SKIP
      @status = status unless status == SKIP
      @unstructured_message = unstructured_message unless unstructured_message == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      query_type = hash.key?('query_type') ? hash['query_type'] : nil
      # Parameter is an array, so we need to iterate through it
      agents = nil
      unless hash['agents'].nil?
        agents = []
        hash['agents'].each do |structure|
          agents << (RequestForInformationAgent.from_hash(structure) if structure)
        end
      end

      agents = SKIP unless hash.key?('agents')
      auto_handled = hash.key?('auto_handled') ? hash['auto_handled'] : SKIP
      creator_party = RequestForInformationCreatorParty.from_hash(hash['creator_party']) if
        hash['creator_party']
      message_id = hash.key?('message_id') ? hash['message_id'] : SKIP
      processing_date =
        hash.key?('processing_date') ? hash['processing_date'] : SKIP
      query_sub_types =
        hash.key?('query_sub_types') ? hash['query_sub_types'] : SKIP
      # Parameter is an array, so we need to iterate through it
      references = nil
      unless hash['references'].nil?
        references = []
        hash['references'].each do |structure|
          references << (RequestForInformationReference.from_hash(structure) if structure)
        end
      end

      references = SKIP unless hash.key?('references')
      # Parameter is an array, so we need to iterate through it
      requested_information = nil
      unless hash['requested_information'].nil?
        requested_information = []
        hash['requested_information'].each do |structure|
          requested_information << (RequestForInformationRequestedInformation.from_hash(structure) if structure)
        end
      end

      requested_information = SKIP unless hash.key?('requested_information')
      scheme_transaction_id =
        hash.key?('scheme_transaction_id') ? hash['scheme_transaction_id'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      unstructured_message =
        hash.key?('unstructured_message') ? hash['unstructured_message'] : SKIP

      # Create object from extracted values.
      QueryAttributes.new(query_type,
                          agents,
                          auto_handled,
                          creator_party,
                          message_id,
                          processing_date,
                          query_sub_types,
                          references,
                          requested_information,
                          scheme_transaction_id,
                          status,
                          unstructured_message)
    end
  end
end
