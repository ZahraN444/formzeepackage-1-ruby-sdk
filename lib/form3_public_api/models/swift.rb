# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Swift Model.
  class Swift < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # SWIFT service level
    # @return [String]
    attr_accessor :bank_operation_code

    # SWIFT service level
    # @return [Header]
    attr_accessor :header

    # A SWIFT instruction code
    # @return [String]
    attr_accessor :instruction_code

    # This field specifies additional information for the Receiver or other
    # party specified.
    # @return [String]
    attr_accessor :sender_receiver_information

    # This repetitive field specifies one or several time indication(s) related
    # to the processing of the payment instruction.
    # @return [String]
    attr_accessor :time_indication

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['bank_operation_code'] = 'bank_operation_code'
      @_hash['header'] = 'header'
      @_hash['instruction_code'] = 'instruction_code'
      @_hash['sender_receiver_information'] = 'sender_receiver_information'
      @_hash['time_indication'] = 'time_indication'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        bank_operation_code
        header
        instruction_code
        sender_receiver_information
        time_indication
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(bank_operation_code = SKIP,
                   header = SKIP,
                   instruction_code = SKIP,
                   sender_receiver_information = SKIP,
                   time_indication = SKIP)
      @bank_operation_code = bank_operation_code unless bank_operation_code == SKIP
      @header = header unless header == SKIP
      @instruction_code = instruction_code unless instruction_code == SKIP
      unless sender_receiver_information == SKIP
        @sender_receiver_information =
          sender_receiver_information
      end
      @time_indication = time_indication unless time_indication == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      bank_operation_code =
        hash.key?('bank_operation_code') ? hash['bank_operation_code'] : SKIP
      header = Header.from_hash(hash['header']) if hash['header']
      instruction_code =
        hash.key?('instruction_code') ? hash['instruction_code'] : SKIP
      sender_receiver_information =
        hash.key?('sender_receiver_information') ? hash['sender_receiver_information'] : SKIP
      time_indication =
        hash.key?('time_indication') ? hash['time_indication'] : SKIP

      # Create object from extracted values.
      Swift.new(bank_operation_code,
                header,
                instruction_code,
                sender_receiver_information,
                time_indication)
    end
  end
end
