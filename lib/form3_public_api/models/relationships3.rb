# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Relationships3 Model.
  class Relationships3 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :payment

    # TODO: Write general description for this method
    # @return [ReversalAdmission2]
    attr_accessor :reversal_admission

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :reversal_submission

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payment'] = 'payment'
      @_hash['reversal_admission'] = 'reversal_admission'
      @_hash['reversal_submission'] = 'reversal_submission'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payment
        reversal_admission
        reversal_submission
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(payment = SKIP,
                   reversal_admission = SKIP,
                   reversal_submission = SKIP)
      @payment = payment unless payment == SKIP
      @reversal_admission = reversal_admission unless reversal_admission == SKIP
      @reversal_submission = reversal_submission unless reversal_submission == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payment = RelationshipLinks.from_hash(hash['payment']) if hash['payment']
      reversal_admission = ReversalAdmission2.from_hash(hash['reversal_admission']) if
        hash['reversal_admission']
      reversal_submission = RelationshipLinks.from_hash(hash['reversal_submission']) if
        hash['reversal_submission']

      # Create object from extracted values.
      Relationships3.new(payment,
                         reversal_admission,
                         reversal_submission)
    end
  end
end
