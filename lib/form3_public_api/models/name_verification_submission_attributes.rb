# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # NameVerificationSubmissionAttributes Model.
  class NameVerificationSubmissionAttributes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :actual_name

    # TODO: Write general description for this method
    # @return [NameVerificationSubmissionAnswerEnum]
    attr_accessor :answer

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :reason

    # TODO: Write general description for this method
    # @return [NameVerificationSubmissionReasonCodeEnum]
    attr_accessor :reason_code

    # TODO: Write general description for this method
    # @return [NameVerificationSubmissionStatusEnum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status_reason

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['actual_name'] = 'actual_name'
      @_hash['answer'] = 'answer'
      @_hash['reason'] = 'reason'
      @_hash['reason_code'] = 'reason_code'
      @_hash['status'] = 'status'
      @_hash['status_reason'] = 'status_reason'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        actual_name
        answer
        reason
        reason_code
        status_reason
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(status = nil,
                   actual_name = SKIP,
                   answer = SKIP,
                   reason = SKIP,
                   reason_code = SKIP,
                   status_reason = SKIP)
      @actual_name = actual_name unless actual_name == SKIP
      @answer = answer unless answer == SKIP
      @reason = reason unless reason == SKIP
      @reason_code = reason_code unless reason_code == SKIP
      @status = status
      @status_reason = status_reason unless status_reason == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      status = hash.key?('status') ? hash['status'] : nil
      actual_name = hash.key?('actual_name') ? hash['actual_name'] : SKIP
      answer = hash.key?('answer') ? hash['answer'] : SKIP
      reason = hash.key?('reason') ? hash['reason'] : SKIP
      reason_code = hash.key?('reason_code') ? hash['reason_code'] : SKIP
      status_reason = hash.key?('status_reason') ? hash['status_reason'] : SKIP

      # Create object from extracted values.
      NameVerificationSubmissionAttributes.new(status,
                                               actual_name,
                                               answer,
                                               reason,
                                               reason_code,
                                               status_reason)
    end
  end
end
