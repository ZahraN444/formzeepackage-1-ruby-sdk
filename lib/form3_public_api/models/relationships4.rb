# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Relationships4 Model.
  class Relationships4 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [RelationshipPayments]
    attr_accessor :payment

    # TODO: Write general description for this method
    # @return [RelationshipReversals]
    attr_accessor :reversal

    # TODO: Write general description for this method
    # @return [RelationshipReversalAdmissionTasks]
    attr_accessor :reversal_admission_task

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payment'] = 'payment'
      @_hash['reversal'] = 'reversal'
      @_hash['reversal_admission_task'] = 'reversal_admission_task'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payment
        reversal
        reversal_admission_task
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(payment = SKIP,
                   reversal = SKIP,
                   reversal_admission_task = SKIP)
      @payment = payment unless payment == SKIP
      @reversal = reversal unless reversal == SKIP
      @reversal_admission_task = reversal_admission_task unless reversal_admission_task == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payment = RelationshipPayments.from_hash(hash['payment']) if hash['payment']
      reversal = RelationshipReversals.from_hash(hash['reversal']) if hash['reversal']
      if hash['reversal_admission_task']
        reversal_admission_task = RelationshipReversalAdmissionTasks.from_hash(hash['reversal_admission_task'])
      end

      # Create object from extracted values.
      Relationships4.new(payment,
                         reversal,
                         reversal_admission_task)
    end
  end
end
