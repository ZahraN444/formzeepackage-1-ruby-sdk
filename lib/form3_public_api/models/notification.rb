# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Notification Model.
  class Notification < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Timestamp when the event that triggered the notification occurred.
    # @return [String]
    attr_accessor :action_time

    # The ID of the user that made the change that triggered this notification.
    # This can be the user ID of a customer or a Form3 system user.
    # @return [UUID | String]
    attr_accessor :actioned_by

    # The full resource itself (as you would see from a GET request)
    # @return [Object]
    attr_accessor :data

    # Internal representation of the record type. Field values are subject to
    # frequent change, evaluation of this field is discouraged.
    # @return [String]
    attr_accessor :data_record_type

    # The type of event
    # @return [String]
    attr_accessor :event_type

    # Unique resource ID
    # @return [UUID | String]
    attr_accessor :id

    # Unique ID of the organisation this resource is created by
    # @return [UUID | String]
    attr_accessor :organisation_id

    # The type of resource contained in `data`
    # @return [String]
    attr_accessor :record_type

    # Version number
    # @return [Integer]
    attr_accessor :version

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['action_time'] = 'action_time'
      @_hash['actioned_by'] = 'actioned_by'
      @_hash['data'] = 'data'
      @_hash['data_record_type'] = 'data_record_type'
      @_hash['event_type'] = 'event_type'
      @_hash['id'] = 'id'
      @_hash['organisation_id'] = 'organisation_id'
      @_hash['record_type'] = 'record_type'
      @_hash['version'] = 'version'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        action_time
        actioned_by
        data
        data_record_type
        event_type
        id
        organisation_id
        record_type
        version
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(action_time = SKIP,
                   actioned_by = SKIP,
                   data = SKIP,
                   data_record_type = SKIP,
                   event_type = SKIP,
                   id = SKIP,
                   organisation_id = SKIP,
                   record_type = SKIP,
                   version = SKIP)
      @action_time = action_time unless action_time == SKIP
      @actioned_by = actioned_by unless actioned_by == SKIP
      @data = data unless data == SKIP
      @data_record_type = data_record_type unless data_record_type == SKIP
      @event_type = event_type unless event_type == SKIP
      @id = id unless id == SKIP
      @organisation_id = organisation_id unless organisation_id == SKIP
      @record_type = record_type unless record_type == SKIP
      @version = version unless version == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      action_time = hash.key?('action_time') ? hash['action_time'] : SKIP
      actioned_by = hash.key?('actioned_by') ? hash['actioned_by'] : SKIP
      data = hash.key?('data') ? hash['data'] : SKIP
      data_record_type =
        hash.key?('data_record_type') ? hash['data_record_type'] : SKIP
      event_type = hash.key?('event_type') ? hash['event_type'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      organisation_id =
        hash.key?('organisation_id') ? hash['organisation_id'] : SKIP
      record_type = hash.key?('record_type') ? hash['record_type'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP

      # Create object from extracted values.
      Notification.new(action_time,
                       actioned_by,
                       data,
                       data_record_type,
                       event_type,
                       id,
                       organisation_id,
                       record_type,
                       version)
    end
  end
end
