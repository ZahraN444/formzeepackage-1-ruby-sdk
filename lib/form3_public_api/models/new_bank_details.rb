# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # NewBankDetails Model.
  class NewBankDetails < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_number

    # The type of identification given at `account_number` attribute
    # @return [AccountNumberCodeEnum]
    attr_accessor :account_number_code

    # Information about the financial institution servicing the account.
    # @return [AccountHoldingEntity]
    attr_accessor :account_with

    # Information about the financial institution servicing the account.
    # @return [String]
    attr_accessor :roll_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_number'] = 'account_number'
      @_hash['account_number_code'] = 'account_number_code'
      @_hash['account_with'] = 'account_with'
      @_hash['roll_number'] = 'roll_number'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_number
        account_number_code
        account_with
        roll_number
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_number = SKIP,
                   account_number_code = SKIP,
                   account_with = SKIP,
                   roll_number = SKIP)
      @account_number = account_number unless account_number == SKIP
      @account_number_code = account_number_code unless account_number_code == SKIP
      @account_with = account_with unless account_with == SKIP
      @roll_number = roll_number unless roll_number == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_number =
        hash.key?('account_number') ? hash['account_number'] : SKIP
      account_number_code =
        hash.key?('account_number_code') ? hash['account_number_code'] : SKIP
      account_with = AccountHoldingEntity.from_hash(hash['account_with']) if hash['account_with']
      roll_number = hash.key?('roll_number') ? hash['roll_number'] : SKIP

      # Create object from extracted values.
      NewBankDetails.new(account_number,
                         account_number_code,
                         account_with,
                         roll_number)
    end
  end
end
