# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Attributes39 Model.
  class Attributes39 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The format of the file that will be submitted to Form3
    # @return [String]
    attr_reader :file_format

    # Hashed content of the file
    # @return [String]
    attr_accessor :file_hash

    # The size of the file to be uploaded - number of bytes. Max size is 1.4
    # Gigabyte
    # @return [Integer]
    attr_accessor :file_size

    # The file type
    # @return [FileTypeEnum]
    attr_accessor :file_type

    # The algorithm used to generate the signature
    # @return [String]
    attr_reader :hashing_algorithm

    # The count of chunks to be uploaded to the resource
    # @return [Integer]
    attr_accessor :number_of_parts

    # Scheme/gateway that the file is to be processed by
    # @return [PaymentScheme2Enum]
    attr_accessor :payment_scheme

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['file_format'] = 'file_format'
      @_hash['file_hash'] = 'file_hash'
      @_hash['file_size'] = 'file_size'
      @_hash['file_type'] = 'file_type'
      @_hash['hashing_algorithm'] = 'hashing_algorithm'
      @_hash['number_of_parts'] = 'number_of_parts'
      @_hash['payment_scheme'] = 'payment_scheme'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(file_hash = nil,
                   file_size = nil,
                   file_type = FileTypeEnum::SWITCH,
                   number_of_parts = nil,
                   payment_scheme = nil)
      @file_format = 'xml'
      @file_hash = file_hash
      @file_size = file_size
      @file_type = file_type
      @hashing_algorithm = 'SHA256'
      @number_of_parts = number_of_parts
      @payment_scheme = payment_scheme
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      file_hash = hash.key?('file_hash') ? hash['file_hash'] : nil
      file_size = hash.key?('file_size') ? hash['file_size'] : nil
      file_type = hash['file_type'] ||= FileTypeEnum::SWITCH
      number_of_parts =
        hash.key?('number_of_parts') ? hash['number_of_parts'] : nil
      payment_scheme =
        hash.key?('payment_scheme') ? hash['payment_scheme'] : nil

      # Create object from extracted values.
      Attributes39.new(file_hash,
                       file_size,
                       file_type,
                       number_of_parts,
                       payment_scheme)
    end
  end
end
