# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # RecallRelationships Model.
  class RecallRelationships < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :payment

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :recall_admission

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :recall_decisions

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :recall_reversal

    # TODO: Write general description for this method
    # @return [RelationshipLinks]
    attr_accessor :recall_submission

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payment'] = 'payment'
      @_hash['recall_admission'] = 'recall_admission'
      @_hash['recall_decisions'] = 'recall_decisions'
      @_hash['recall_reversal'] = 'recall_reversal'
      @_hash['recall_submission'] = 'recall_submission'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payment
        recall_admission
        recall_decisions
        recall_reversal
        recall_submission
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(payment = SKIP,
                   recall_admission = SKIP,
                   recall_decisions = SKIP,
                   recall_reversal = SKIP,
                   recall_submission = SKIP)
      @payment = payment unless payment == SKIP
      @recall_admission = recall_admission unless recall_admission == SKIP
      @recall_decisions = recall_decisions unless recall_decisions == SKIP
      @recall_reversal = recall_reversal unless recall_reversal == SKIP
      @recall_submission = recall_submission unless recall_submission == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      payment = RelationshipLinks.from_hash(hash['payment']) if hash['payment']
      recall_admission = RelationshipLinks.from_hash(hash['recall_admission']) if
        hash['recall_admission']
      recall_decisions = RelationshipLinks.from_hash(hash['recall_decisions']) if
        hash['recall_decisions']
      recall_reversal = RelationshipLinks.from_hash(hash['recall_reversal']) if
        hash['recall_reversal']
      recall_submission = RelationshipLinks.from_hash(hash['recall_submission']) if
        hash['recall_submission']

      # Create object from extracted values.
      RecallRelationships.new(payment,
                              recall_admission,
                              recall_decisions,
                              recall_reversal,
                              recall_submission)
    end
  end
end
