# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # ResolutionRelatedInformation Model.
  class ResolutionRelatedInformation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Answer to the recall request. Can either be `MPNS`, `RTGS` or `RTNS`.
    # @return [ClearingChannelEnum]
    attr_accessor :clearing_channel

    # Block to represent a list of references
    # @return [Array[Reference]]
    attr_accessor :references

    # Date that the payment will be settled
    # @return [Date]
    attr_accessor :settlement_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['clearing_channel'] = 'clearing_channel'
      @_hash['references'] = 'references'
      @_hash['settlement_date'] = 'settlement_date'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        clearing_channel
        references
        settlement_date
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(clearing_channel = SKIP,
                   references = SKIP,
                   settlement_date = SKIP)
      @clearing_channel = clearing_channel unless clearing_channel == SKIP
      @references = references unless references == SKIP
      @settlement_date = settlement_date unless settlement_date == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      clearing_channel =
        hash.key?('clearing_channel') ? hash['clearing_channel'] : SKIP
      # Parameter is an array, so we need to iterate through it
      references = nil
      unless hash['references'].nil?
        references = []
        hash['references'].each do |structure|
          references << (Reference.from_hash(structure) if structure)
        end
      end

      references = SKIP unless hash.key?('references')
      settlement_date =
        hash.key?('settlement_date') ? hash['settlement_date'] : SKIP

      # Create object from extracted values.
      ResolutionRelatedInformation.new(clearing_channel,
                                       references,
                                       settlement_date)
    end
  end
end
