# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # AccountAttributesPrivateIdentification Model.
  class AccountAttributesPrivateIdentification < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birth_country

    # Customer birth date
    # @return [Date]
    attr_accessor :birth_date

    # Customer birth date
    # @return [String]
    attr_accessor :city

    # Customer birth date
    # @return [String]
    attr_accessor :country

    # Customer birth date
    # @return [String]
    attr_accessor :identification

    # Customer birth date
    # @return [String]
    attr_accessor :identification_issuer

    # Customer birth date
    # @return [String]
    attr_accessor :identification_scheme

    # Customer birth date
    # @return [String]
    attr_accessor :identification_scheme_code

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['address'] = 'address'
      @_hash['birth_country'] = 'birth_country'
      @_hash['birth_date'] = 'birth_date'
      @_hash['city'] = 'city'
      @_hash['country'] = 'country'
      @_hash['identification'] = 'identification'
      @_hash['identification_issuer'] = 'identification_issuer'
      @_hash['identification_scheme'] = 'identification_scheme'
      @_hash['identification_scheme_code'] = 'identification_scheme_code'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        address
        birth_country
        birth_date
        city
        country
        identification
        identification_issuer
        identification_scheme
        identification_scheme_code
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(address = SKIP,
                   birth_country = SKIP,
                   birth_date = SKIP,
                   city = SKIP,
                   country = SKIP,
                   identification = SKIP,
                   identification_issuer = SKIP,
                   identification_scheme = SKIP,
                   identification_scheme_code = SKIP)
      @address = address unless address == SKIP
      @birth_country = birth_country unless birth_country == SKIP
      @birth_date = birth_date unless birth_date == SKIP
      @city = city unless city == SKIP
      @country = country unless country == SKIP
      @identification = identification unless identification == SKIP
      @identification_issuer = identification_issuer unless identification_issuer == SKIP
      @identification_scheme = identification_scheme unless identification_scheme == SKIP
      unless identification_scheme_code == SKIP
        @identification_scheme_code =
          identification_scheme_code
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      address = hash.key?('address') ? hash['address'] : SKIP
      birth_country = hash.key?('birth_country') ? hash['birth_country'] : SKIP
      birth_date = hash.key?('birth_date') ? hash['birth_date'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      country = hash.key?('country') ? hash['country'] : SKIP
      identification =
        hash.key?('identification') ? hash['identification'] : SKIP
      identification_issuer =
        hash.key?('identification_issuer') ? hash['identification_issuer'] : SKIP
      identification_scheme =
        hash.key?('identification_scheme') ? hash['identification_scheme'] : SKIP
      identification_scheme_code =
        hash.key?('identification_scheme_code') ? hash['identification_scheme_code'] : SKIP

      # Create object from extracted values.
      AccountAttributesPrivateIdentification.new(address,
                                                 birth_country,
                                                 birth_date,
                                                 city,
                                                 country,
                                                 identification,
                                                 identification_issuer,
                                                 identification_scheme,
                                                 identification_scheme_code)
    end
  end
end
