# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # SupportedSchemes Model.
  class SupportedSchemes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [BACS]
    attr_accessor :bacs

    # TODO: Write general description for this method
    # @return [CCC]
    attr_accessor :ccc

    # TODO: Write general description for this method
    # @return [CHAPS]
    attr_accessor :chaps

    # TODO: Write general description for this method
    # @return [FPS]
    attr_accessor :fps

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['bacs'] = 'BACS'
      @_hash['ccc'] = 'CCC'
      @_hash['chaps'] = 'CHAPS'
      @_hash['fps'] = 'FPS'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        bacs
        ccc
        chaps
        fps
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(bacs = SKIP,
                   ccc = SKIP,
                   chaps = SKIP,
                   fps = SKIP)
      @bacs = bacs unless bacs == SKIP
      @ccc = ccc unless ccc == SKIP
      @chaps = chaps unless chaps == SKIP
      @fps = fps unless fps == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      bacs = BACS.from_hash(hash['BACS']) if hash['BACS']
      ccc = CCC.from_hash(hash['CCC']) if hash['CCC']
      chaps = CHAPS.from_hash(hash['CHAPS']) if hash['CHAPS']
      fps = FPS.from_hash(hash['FPS']) if hash['FPS']

      # Create object from extracted values.
      SupportedSchemes.new(bacs,
                           ccc,
                           chaps,
                           fps)
    end
  end
end
