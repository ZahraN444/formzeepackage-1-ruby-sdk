# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # RequestForInformationCreatorParty Model.
  class RequestForInformationCreatorParty < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birth_city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birth_country

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birth_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :birth_province

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organisation_identification

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organisation_identification_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :organisation_identification_issuer

    # TODO: Write general description for this method
    # @return [Array[OrganisationIdentification]]
    attr_accessor :organisation_identifications

    # TODO: Write general description for this method
    # @return [PrivateIdentification1]
    attr_accessor :private_identification

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :telephone_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['birth_city'] = 'birth_city'
      @_hash['birth_country'] = 'birth_country'
      @_hash['birth_date'] = 'birth_date'
      @_hash['birth_province'] = 'birth_province'
      @_hash['name'] = 'name'
      @_hash['organisation_identification'] = 'organisation_identification'
      @_hash['organisation_identification_code'] =
        'organisation_identification_code'
      @_hash['organisation_identification_issuer'] =
        'organisation_identification_issuer'
      @_hash['organisation_identifications'] = 'organisation_identifications'
      @_hash['private_identification'] = 'private_identification'
      @_hash['telephone_number'] = 'telephone_number'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        birth_city
        birth_country
        birth_date
        birth_province
        name
        organisation_identification
        organisation_identification_code
        organisation_identification_issuer
        organisation_identifications
        private_identification
        telephone_number
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(birth_city = SKIP,
                   birth_country = SKIP,
                   birth_date = SKIP,
                   birth_province = SKIP,
                   name = SKIP,
                   organisation_identification = SKIP,
                   organisation_identification_code = SKIP,
                   organisation_identification_issuer = SKIP,
                   organisation_identifications = SKIP,
                   private_identification = SKIP,
                   telephone_number = SKIP)
      @birth_city = birth_city unless birth_city == SKIP
      @birth_country = birth_country unless birth_country == SKIP
      @birth_date = birth_date unless birth_date == SKIP
      @birth_province = birth_province unless birth_province == SKIP
      @name = name unless name == SKIP
      unless organisation_identification == SKIP
        @organisation_identification =
          organisation_identification
      end
      unless organisation_identification_code == SKIP
        @organisation_identification_code =
          organisation_identification_code
      end
      unless organisation_identification_issuer == SKIP
        @organisation_identification_issuer =
          organisation_identification_issuer
      end
      unless organisation_identifications == SKIP
        @organisation_identifications =
          organisation_identifications
      end
      @private_identification = private_identification unless private_identification == SKIP
      @telephone_number = telephone_number unless telephone_number == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      birth_city = hash.key?('birth_city') ? hash['birth_city'] : SKIP
      birth_country = hash.key?('birth_country') ? hash['birth_country'] : SKIP
      birth_date = hash.key?('birth_date') ? hash['birth_date'] : SKIP
      birth_province =
        hash.key?('birth_province') ? hash['birth_province'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      organisation_identification =
        hash.key?('organisation_identification') ? hash['organisation_identification'] : SKIP
      organisation_identification_code =
        hash.key?('organisation_identification_code') ? hash['organisation_identification_code'] : SKIP
      organisation_identification_issuer =
        hash.key?('organisation_identification_issuer') ? hash['organisation_identification_issuer'] : SKIP
      # Parameter is an array, so we need to iterate through it
      organisation_identifications = nil
      unless hash['organisation_identifications'].nil?
        organisation_identifications = []
        hash['organisation_identifications'].each do |structure|
          organisation_identifications << (OrganisationIdentification.from_hash(structure) if structure)
        end
      end

      organisation_identifications = SKIP unless hash.key?('organisation_identifications')
      private_identification = PrivateIdentification1.from_hash(hash['private_identification']) if
        hash['private_identification']
      telephone_number =
        hash.key?('telephone_number') ? hash['telephone_number'] : SKIP

      # Create object from extracted values.
      RequestForInformationCreatorParty.new(birth_city,
                                            birth_country,
                                            birth_date,
                                            birth_province,
                                            name,
                                            organisation_identification,
                                            organisation_identification_code,
                                            organisation_identification_issuer,
                                            organisation_identifications,
                                            private_identification,
                                            telephone_number)
    end
  end
end
