# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # DirectDebitAdmissionStatusReason.
  class DirectDebitAdmissionStatusReasonEnum
    DIRECT_DEBIT_ADMISSION_STATUS_REASON_ENUM = [
      # TODO: Write general description for ACCEPTED
      ACCEPTED = 'accepted'.freeze,

      # TODO: Write general description for INVALID_BENEFICIARY_DETAILS
      INVALID_BENEFICIARY_DETAILS = 'invalid_beneficiary_details'.freeze,

      # TODO: Write general description for INVALID_TRANSACTION
      INVALID_TRANSACTION = 'invalid_transaction'.freeze,

      # TODO: Write general description for BANKID_NOT_PROVISIONED
      BANKID_NOT_PROVISIONED = 'bankid_not_provisioned'.freeze,

      # TODO: Write general description for UNKNOWN_ACCOUNTNUMBER
      UNKNOWN_ACCOUNTNUMBER = 'unknown_accountnumber'.freeze,

      # TODO: Write general description for PENDING_SETTLEMENT
      PENDING_SETTLEMENT = 'pending_settlement'.freeze,

      # TODO: Write general description for SETTLEMENT_FAILED
      SETTLEMENT_FAILED = 'settlement_failed'.freeze,

      # TODO: Write general description for DUPLICATION
      DUPLICATION = 'duplication'.freeze,

      # TODO: Write general description for NOT_ALLOWED_AMOUNT
      NOT_ALLOWED_AMOUNT = 'not_allowed_amount'.freeze,

      # TODO: Write general description for MANDATE_CANCELLED
      MANDATE_CANCELLED = 'mandate_cancelled'.freeze,

      # TODO: Write general description for NO_INSTRUCTION
      NO_INSTRUCTION = 'no_instruction'.freeze,

      # TODO: Write general description for ACCOUNT_TRANSFERRED_TO_NEW_PSP
      ACCOUNT_TRANSFERRED_TO_NEW_PSP = 'account_transferred_to_new_psp'.freeze,

      # TODO: Write general description for PAYING_BANK_CANCELLATION
      PAYING_BANK_CANCELLATION = 'paying_bank_cancellation'.freeze,

      # TODO: Write general description for CANCELLED_BY_PAYER
      CANCELLED_BY_PAYER = 'cancelled_by_payer'.freeze,

      # TODO: Write general description for PAYER_DECEASED
      PAYER_DECEASED = 'payer_deceased'.freeze,

      # TODO: Write general description for ACCOUNT_CLOSED
      ACCOUNT_CLOSED = 'account_closed'.freeze,

      # TODO: Write general description for SCHEME_STATUS_INVALID
      SCHEME_STATUS_INVALID = 'scheme_status_invalid'.freeze,

      # TODO: Write general description for PENDING_AUTHORISATION_BY_SPONSOR
      PENDING_AUTHORISATION_BY_SPONSOR = 'pending_authorisation_by_sponsor'.freeze,

      # TODO: Write general description for AUTHORISED_BY_SPONSOR
      AUTHORISED_BY_SPONSOR = 'authorised_by_sponsor'.freeze,

      # TODO: Write general description for AUTHORISATION_FAILED_BY_SPONSOR
      AUTHORISATION_FAILED_BY_SPONSOR = 'authorisation_failed_by_sponsor'.freeze,

      # TODO: Write general description for CLOSED_ACCOUNT
      CLOSED_ACCOUNT = 'closed_account'.freeze,

      # TODO: Write general description for BLOCKED_ACCOUNT
      BLOCKED_ACCOUNT = 'blocked_account'.freeze,

      # TODO: Write general description for INVALID_DEBTOR_ACCOUNT_TYPE
      INVALID_DEBTOR_ACCOUNT_TYPE = 'invalid_debtor_account_type'.freeze,

      # TODO: Write general description for TRANSACTION_FORBIDDEN
      TRANSACTION_FORBIDDEN = 'transaction_forbidden'.freeze,

      # TODO: Write general description for INVALID_BANK_OPERATION_CODE
      INVALID_BANK_OPERATION_CODE = 'invalid_bank_operation_code'.freeze,

      # TODO: Write general description for INSUFFICIENT_FUNDS
      INSUFFICIENT_FUNDS = 'insufficient_funds'.freeze,

      # TODO: Write general description for UNRECOGNISED_INITIATING_PARTY
      UNRECOGNISED_INITIATING_PARTY = 'unrecognised_initiating_party'.freeze,

      # TODO: Write general description for
      # CREDITOR_BANK_NOT_REGISTERED_UNDER_BIC
      CREDITOR_BANK_NOT_REGISTERED_UNDER_BIC = 'creditor_bank_not_registered_under_bic'.freeze,

      # TODO: Write general description for
      # ENUM_DEBTOR_BANK_NOT_REGISTERED_UNDER_BIC
      ENUM_DEBTOR_BANK_NOT_REGISTERED_UNDER_BIC = 'debtor_bank_not registered_under_bic'.freeze,

      # TODO: Write general description for OPERATION_CODE_INCORRECT
      OPERATION_CODE_INCORRECT = 'operation_code_incorrect'.freeze,

      # TODO: Write general description for UNAUTHORISED_TRANSACTION
      UNAUTHORISED_TRANSACTION = 'unauthorised_transaction'.freeze,

      # TODO: Write general description for
      # MISSING_MANDATORY_MANDATE_INFORMATION
      MISSING_MANDATORY_MANDATE_INFORMATION = 'missing_mandatory_mandate_information'.freeze,

      # TODO: Write general description for END_CUSTOMER_DECEASED
      END_CUSTOMER_DECEASED = 'end_customer_deceased'.freeze,

      # TODO: Write general description for NOT_SPECIFIED_REASON_CUSTOMER
      NOT_SPECIFIED_REASON_CUSTOMER = 'not_specified_reason_customer'.freeze,

      # TODO: Write general description for NOT_SPECIFIED_REASON_AGENT
      NOT_SPECIFIED_REASON_AGENT = 'not_specified_reason_agent'.freeze,

      # TODO: Write general description for BANK_IDENTIFIER_INCORRECT
      BANK_IDENTIFIER_INCORRECT = 'bank_identifier_incorrect'.freeze,

      # TODO: Write general description for MISSING_DEBTOR_ACCOUNT
      MISSING_DEBTOR_ACCOUNT = 'missing_debtor_account'.freeze,

      # TODO: Write general description for MISSING_DEBTOR_NAME_OR_ADDRESS
      MISSING_DEBTOR_NAME_OR_ADDRESS = 'missing_debtor_name_or_address'.freeze,

      # TODO: Write general description for MISSING_CREDITOR_NAME_OR_ADDRESS
      MISSING_CREDITOR_NAME_OR_ADDRESS = 'missing_creditor_name_or_address'.freeze,

      # TODO: Write general description for REGULATORY_REASON
      REGULATORY_REASON = 'regulatory_reason'.freeze,

      # TODO: Write general description for
      # SPECIFIC_SERVICE_OFFERED_BY_DEBTOR_BANK
      SPECIFIC_SERVICE_OFFERED_BY_DEBTOR_BANK = 'specific_service_offered_by_debtor_bank'.freeze,

      # TODO: Write general description for RECALLED_BY_ORIGINATOR
      RECALLED_BY_ORIGINATOR = 'recalled_by_originator'.freeze,

      # TODO: Write general description for UNKNOWN_STATUS_REASON
      UNKNOWN_STATUS_REASON = 'unknown_status_reason'.freeze
    ].freeze

    def self.validate(value)
      return false if value.nil?

      DIRECT_DEBIT_ADMISSION_STATUS_REASON_ENUM.include?(value)
    end
  end
end
