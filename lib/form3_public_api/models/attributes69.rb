# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Form3PublicApi
  # Attributes69 Model.
  class Attributes69 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_category

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_message

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :occurred_on

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['error_category'] = 'error_category'
      @_hash['error_message'] = 'error_message'
      @_hash['occurred_on'] = 'occurred_on'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        error_category
        error_message
        occurred_on
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(error_category = SKIP,
                   error_message = SKIP,
                   occurred_on = SKIP)
      @error_category = error_category unless error_category == SKIP
      @error_message = error_message unless error_message == SKIP
      @occurred_on = occurred_on unless occurred_on == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      error_category =
        hash.key?('error_category') ? hash['error_category'] : SKIP
      error_message = hash.key?('error_message') ? hash['error_message'] : SKIP
      occurred_on = if hash.key?('occurred_on')
                      (DateTimeHelper.from_rfc3339(hash['occurred_on']) if hash['occurred_on'])
                    else
                      SKIP
                    end

      # Create object from extracted values.
      Attributes69.new(error_category,
                       error_message,
                       occurred_on)
    end

    def to_custom_occurred_on
      DateTimeHelper.to_rfc3339(occurred_on)
    end
  end
end
