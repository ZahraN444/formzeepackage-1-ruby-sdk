# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Attributes35 Model.
  class Attributes35 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Only present when a DirectDebitReversal contains charges. SEPA only
    # @return [ChargesAmount]
    attr_accessor :charges_amount

    # Date on which the operation is to be debited from the debtor account.
    # Formatted according to ISO 8601 format: YYYY-MM-DD.
    # @return [Date]
    attr_accessor :processing_date

    # Further explanation of the reason given in reason_code. Only evaluated for
    # certain reason codes.
    # @return [String]
    attr_accessor :reason

    # The reason for the direct debit reversal. Has to be a valid [reversal
    # reason
    # code](http://api-docs.form3.tech/api.html#enumerations-reversal-reason-cod
    # es).
    # @return [String]
    attr_accessor :reason_code

    # SEPA only
    # @return [ReversalAmount]
    attr_accessor :reversal_amount

    # Date on which the operation is processed by the scheme. Formatted
    # according to ISO 8601 format: YYYY-MM-DD. Only used if different from
    # `processing_date`.
    # @return [Date]
    attr_accessor :scheme_processing_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['charges_amount'] = 'charges_amount'
      @_hash['processing_date'] = 'processing_date'
      @_hash['reason'] = 'reason'
      @_hash['reason_code'] = 'reason_code'
      @_hash['reversal_amount'] = 'reversal_amount'
      @_hash['scheme_processing_date'] = 'scheme_processing_date'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        charges_amount
        processing_date
        reason
        reason_code
        reversal_amount
        scheme_processing_date
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(charges_amount = SKIP,
                   processing_date = SKIP,
                   reason = SKIP,
                   reason_code = SKIP,
                   reversal_amount = SKIP,
                   scheme_processing_date = SKIP)
      @charges_amount = charges_amount unless charges_amount == SKIP
      @processing_date = processing_date unless processing_date == SKIP
      @reason = reason unless reason == SKIP
      @reason_code = reason_code unless reason_code == SKIP
      @reversal_amount = reversal_amount unless reversal_amount == SKIP
      @scheme_processing_date = scheme_processing_date unless scheme_processing_date == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      charges_amount = ChargesAmount.from_hash(hash['charges_amount']) if hash['charges_amount']
      processing_date =
        hash.key?('processing_date') ? hash['processing_date'] : SKIP
      reason = hash.key?('reason') ? hash['reason'] : SKIP
      reason_code = hash.key?('reason_code') ? hash['reason_code'] : SKIP
      reversal_amount = ReversalAmount.from_hash(hash['reversal_amount']) if
        hash['reversal_amount']
      scheme_processing_date =
        hash.key?('scheme_processing_date') ? hash['scheme_processing_date'] : SKIP

      # Create object from extracted values.
      Attributes35.new(charges_amount,
                       processing_date,
                       reason,
                       reason_code,
                       reversal_amount,
                       scheme_processing_date)
    end
  end
end
