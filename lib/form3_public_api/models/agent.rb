# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Agent Model.
  class Agent < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account number of the financial institution. Can be BBAN or IBAN.
    # @return [String]
    attr_accessor :account_number

    # The type of identification given at `account_number` attribute
    # @return [AccountNumberCodeEnum]
    attr_accessor :account_number_code

    # The type of identification given at `account_number` attribute
    # @return [Array[String]]
    attr_accessor :address

    # The type of identification given at `account_number` attribute
    # @return [Identification]
    attr_accessor :identification

    # Name by which the financial institution is known
    # @return [String]
    attr_accessor :name

    # Role of the agent in the payment chain. Enum of pre-defined values, new
    # values can be added when needed
    # @return [AgentRoleEnum]
    attr_accessor :role

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_number'] = 'account_number'
      @_hash['account_number_code'] = 'account_number_code'
      @_hash['address'] = 'address'
      @_hash['identification'] = 'identification'
      @_hash['name'] = 'name'
      @_hash['role'] = 'role'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_number
        account_number_code
        address
        identification
        name
        role
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_number = SKIP,
                   account_number_code = SKIP,
                   address = SKIP,
                   identification = SKIP,
                   name = SKIP,
                   role = SKIP)
      @account_number = account_number unless account_number == SKIP
      @account_number_code = account_number_code unless account_number_code == SKIP
      @address = address unless address == SKIP
      @identification = identification unless identification == SKIP
      @name = name unless name == SKIP
      @role = role unless role == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_number =
        hash.key?('account_number') ? hash['account_number'] : SKIP
      account_number_code =
        hash.key?('account_number_code') ? hash['account_number_code'] : SKIP
      address = hash.key?('address') ? hash['address'] : SKIP
      identification = Identification.from_hash(hash['identification']) if hash['identification']
      name = hash.key?('name') ? hash['name'] : SKIP
      role = hash.key?('role') ? hash['role'] : SKIP

      # Create object from extracted values.
      Agent.new(account_number,
                account_number_code,
                address,
                identification,
                name,
                role)
    end
  end
end
