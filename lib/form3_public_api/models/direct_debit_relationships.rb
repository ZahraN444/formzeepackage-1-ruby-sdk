# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # DirectDebitRelationships Model.
  class DirectDebitRelationships < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [DirectDebitAdmission2]
    attr_accessor :direct_debit_admission

    # TODO: Write general description for this method
    # @return [DirectDebitDecision2]
    attr_accessor :direct_debit_decision

    # TODO: Write general description for this method
    # @return [DirectDebitRecall2]
    attr_accessor :direct_debit_recall

    # TODO: Write general description for this method
    # @return [DirectDebitReturn2]
    attr_accessor :direct_debit_return

    # TODO: Write general description for this method
    # @return [DirectDebitReversal2]
    attr_accessor :direct_debit_reversal

    # The submission resource related to the direct debit
    # @return [DirectDebitSubmission2]
    attr_accessor :direct_debit_submission

    # The submission resource related to the direct debit
    # @return [Mandate6]
    attr_accessor :mandate

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['direct_debit_admission'] = 'direct_debit_admission'
      @_hash['direct_debit_decision'] = 'direct_debit_decision'
      @_hash['direct_debit_recall'] = 'direct_debit_recall'
      @_hash['direct_debit_return'] = 'direct_debit_return'
      @_hash['direct_debit_reversal'] = 'direct_debit_reversal'
      @_hash['direct_debit_submission'] = 'direct_debit_submission'
      @_hash['mandate'] = 'mandate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        direct_debit_admission
        direct_debit_decision
        direct_debit_recall
        direct_debit_return
        direct_debit_reversal
        direct_debit_submission
        mandate
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(direct_debit_admission = SKIP,
                   direct_debit_decision = SKIP,
                   direct_debit_recall = SKIP,
                   direct_debit_return = SKIP,
                   direct_debit_reversal = SKIP,
                   direct_debit_submission = SKIP,
                   mandate = SKIP)
      @direct_debit_admission = direct_debit_admission unless direct_debit_admission == SKIP
      @direct_debit_decision = direct_debit_decision unless direct_debit_decision == SKIP
      @direct_debit_recall = direct_debit_recall unless direct_debit_recall == SKIP
      @direct_debit_return = direct_debit_return unless direct_debit_return == SKIP
      @direct_debit_reversal = direct_debit_reversal unless direct_debit_reversal == SKIP
      @direct_debit_submission = direct_debit_submission unless direct_debit_submission == SKIP
      @mandate = mandate unless mandate == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      direct_debit_admission = DirectDebitAdmission2.from_hash(hash['direct_debit_admission']) if
        hash['direct_debit_admission']
      direct_debit_decision = DirectDebitDecision2.from_hash(hash['direct_debit_decision']) if
        hash['direct_debit_decision']
      direct_debit_recall = DirectDebitRecall2.from_hash(hash['direct_debit_recall']) if
        hash['direct_debit_recall']
      direct_debit_return = DirectDebitReturn2.from_hash(hash['direct_debit_return']) if
        hash['direct_debit_return']
      direct_debit_reversal = DirectDebitReversal2.from_hash(hash['direct_debit_reversal']) if
        hash['direct_debit_reversal']
      direct_debit_submission = DirectDebitSubmission2.from_hash(hash['direct_debit_submission']) if
        hash['direct_debit_submission']
      mandate = Mandate6.from_hash(hash['mandate']) if hash['mandate']

      # Create object from extracted values.
      DirectDebitRelationships.new(direct_debit_admission,
                                   direct_debit_decision,
                                   direct_debit_recall,
                                   direct_debit_return,
                                   direct_debit_reversal,
                                   direct_debit_submission,
                                   mandate)
    end
  end
end
