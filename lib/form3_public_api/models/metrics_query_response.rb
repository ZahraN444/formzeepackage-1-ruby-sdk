# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # MetricsQueryResponse Model.
  class MetricsQueryResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [PrometheusMetricData]
    attr_accessor :data

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :error_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :warnings

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['data'] = 'data'
      @_hash['error'] = 'error'
      @_hash['error_type'] = 'errorType'
      @_hash['status'] = 'status'
      @_hash['warnings'] = 'warnings'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        data
        error
        error_type
        status
        warnings
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(data = SKIP,
                   error = SKIP,
                   error_type = SKIP,
                   status = SKIP,
                   warnings = SKIP)
      @data = data unless data == SKIP
      @error = error unless error == SKIP
      @error_type = error_type unless error_type == SKIP
      @status = status unless status == SKIP
      @warnings = warnings unless warnings == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      data = PrometheusMetricData.from_hash(hash['data']) if hash['data']
      error = hash.key?('error') ? hash['error'] : SKIP
      error_type = hash.key?('errorType') ? hash['errorType'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      warnings = hash.key?('warnings') ? hash['warnings'] : SKIP

      # Create object from extracted values.
      MetricsQueryResponse.new(data,
                               error,
                               error_type,
                               status,
                               warnings)
    end
  end
end
