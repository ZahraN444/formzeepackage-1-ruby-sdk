# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # MandateAttributes Model.
  class MandateAttributes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :amount

    # TODO: Write general description for this method
    # @return [MandateAttributesBeneficiaryParty]
    attr_accessor :beneficiary_party

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :clearing_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :currency

    # TODO: Write general description for this method
    # @return [MandateAttributesDebtorParty]
    attr_accessor :debtor_party

    # TODO: Write general description for this method
    # @return [MandateFrequencyEnum]
    attr_accessor :frequency

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :numeric_reference

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_scheme

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :processing_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :reference

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :scheme_payment_type

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :scheme_processing_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :source

    # TODO: Write general description for this method
    # @return [MandateStatusEnum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status_reason

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :unique_scheme_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount'] = 'amount'
      @_hash['beneficiary_party'] = 'beneficiary_party'
      @_hash['clearing_id'] = 'clearing_id'
      @_hash['currency'] = 'currency'
      @_hash['debtor_party'] = 'debtor_party'
      @_hash['frequency'] = 'frequency'
      @_hash['numeric_reference'] = 'numeric_reference'
      @_hash['payment_scheme'] = 'payment_scheme'
      @_hash['processing_date'] = 'processing_date'
      @_hash['reference'] = 'reference'
      @_hash['scheme_payment_type'] = 'scheme_payment_type'
      @_hash['scheme_processing_date'] = 'scheme_processing_date'
      @_hash['source'] = 'source'
      @_hash['status'] = 'status'
      @_hash['status_reason'] = 'status_reason'
      @_hash['unique_scheme_id'] = 'unique_scheme_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        amount
        beneficiary_party
        clearing_id
        currency
        debtor_party
        frequency
        numeric_reference
        payment_scheme
        processing_date
        reference
        scheme_payment_type
        scheme_processing_date
        source
        status
        status_reason
        unique_scheme_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(amount = SKIP,
                   beneficiary_party = SKIP,
                   clearing_id = SKIP,
                   currency = SKIP,
                   debtor_party = SKIP,
                   frequency = SKIP,
                   numeric_reference = SKIP,
                   payment_scheme = SKIP,
                   processing_date = SKIP,
                   reference = SKIP,
                   scheme_payment_type = SKIP,
                   scheme_processing_date = SKIP,
                   source = SKIP,
                   status = SKIP,
                   status_reason = SKIP,
                   unique_scheme_id = SKIP)
      @amount = amount unless amount == SKIP
      @beneficiary_party = beneficiary_party unless beneficiary_party == SKIP
      @clearing_id = clearing_id unless clearing_id == SKIP
      @currency = currency unless currency == SKIP
      @debtor_party = debtor_party unless debtor_party == SKIP
      @frequency = frequency unless frequency == SKIP
      @numeric_reference = numeric_reference unless numeric_reference == SKIP
      @payment_scheme = payment_scheme unless payment_scheme == SKIP
      @processing_date = processing_date unless processing_date == SKIP
      @reference = reference unless reference == SKIP
      @scheme_payment_type = scheme_payment_type unless scheme_payment_type == SKIP
      @scheme_processing_date = scheme_processing_date unless scheme_processing_date == SKIP
      @source = source unless source == SKIP
      @status = status unless status == SKIP
      @status_reason = status_reason unless status_reason == SKIP
      @unique_scheme_id = unique_scheme_id unless unique_scheme_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount = hash.key?('amount') ? hash['amount'] : SKIP
      beneficiary_party = MandateAttributesBeneficiaryParty.from_hash(hash['beneficiary_party']) if
        hash['beneficiary_party']
      clearing_id = hash.key?('clearing_id') ? hash['clearing_id'] : SKIP
      currency = hash.key?('currency') ? hash['currency'] : SKIP
      debtor_party = MandateAttributesDebtorParty.from_hash(hash['debtor_party']) if
        hash['debtor_party']
      frequency = hash.key?('frequency') ? hash['frequency'] : SKIP
      numeric_reference =
        hash.key?('numeric_reference') ? hash['numeric_reference'] : SKIP
      payment_scheme =
        hash.key?('payment_scheme') ? hash['payment_scheme'] : SKIP
      processing_date =
        hash.key?('processing_date') ? hash['processing_date'] : SKIP
      reference = hash.key?('reference') ? hash['reference'] : SKIP
      scheme_payment_type =
        hash.key?('scheme_payment_type') ? hash['scheme_payment_type'] : SKIP
      scheme_processing_date =
        hash.key?('scheme_processing_date') ? hash['scheme_processing_date'] : SKIP
      source = hash.key?('source') ? hash['source'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      status_reason = hash.key?('status_reason') ? hash['status_reason'] : SKIP
      unique_scheme_id =
        hash.key?('unique_scheme_id') ? hash['unique_scheme_id'] : SKIP

      # Create object from extracted values.
      MandateAttributes.new(amount,
                            beneficiary_party,
                            clearing_id,
                            currency,
                            debtor_party,
                            frequency,
                            numeric_reference,
                            payment_scheme,
                            processing_date,
                            reference,
                            scheme_payment_type,
                            scheme_processing_date,
                            source,
                            status,
                            status_reason,
                            unique_scheme_id)
    end
  end
end
