# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # NewQueryResponseSubmission Model.
  class NewQueryResponseSubmission < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Attributes50]
    attr_accessor :attributes

    # TODO: Write general description for this method
    # @return [UUID | String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [UUID | String]
    attr_accessor :organisation_id

    # TODO: Write general description for this method
    # @return [String]
    attr_reader :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['attributes'] = 'attributes'
      @_hash['id'] = 'id'
      @_hash['organisation_id'] = 'organisation_id'
      @_hash['type'] = 'type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        attributes
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = nil,
                   organisation_id = nil,
                   attributes = SKIP)
      @attributes = attributes unless attributes == SKIP
      @id = id
      @organisation_id = organisation_id
      @type = 'query_response_submissions'
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      organisation_id =
        hash.key?('organisation_id') ? hash['organisation_id'] : nil
      attributes = Attributes50.from_hash(hash['attributes']) if hash['attributes']

      # Create object from extracted values.
      NewQueryResponseSubmission.new(id,
                                     organisation_id,
                                     attributes)
    end
  end
end
