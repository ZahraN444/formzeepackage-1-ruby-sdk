# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Token Model.
  class Token < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The access token to be used for all future API calls until `expires_in`
    # @return [String]
    attr_accessor :access_token

    # The lifetime of this token in seconds
    # @return [Integer]
    attr_accessor :expires_in

    # The type of the token. Is always set to `Bearer`.
    # @return [TokenTypeEnum]
    attr_accessor :token_type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['access_token'] = 'access_token'
      @_hash['expires_in'] = 'expires_in'
      @_hash['token_type'] = 'token_type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        access_token
        expires_in
        token_type
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(access_token = SKIP,
                   expires_in = SKIP,
                   token_type = SKIP)
      @access_token = access_token unless access_token == SKIP
      @expires_in = expires_in unless expires_in == SKIP
      @token_type = token_type unless token_type == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      access_token = hash.key?('access_token') ? hash['access_token'] : SKIP
      expires_in = hash.key?('expires_in') ? hash['expires_in'] : SKIP
      token_type = hash.key?('token_type') ? hash['token_type'] : SKIP

      # Create object from extracted values.
      Token.new(access_token,
                expires_in,
                token_type)
    end
  end
end
