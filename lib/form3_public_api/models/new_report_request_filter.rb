# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # NewReportRequestFilter Model.
  class NewReportRequestFilter < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :date_from

    # TODO: Write general description for this method
    # @return [Date]
    attr_accessor :date_to

    # TODO: Write general description for this method
    # @return [Array[NewReportRequestReportUser]]
    attr_accessor :report_users

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['date_from'] = 'date_from'
      @_hash['date_to'] = 'date_to'
      @_hash['report_users'] = 'report_users'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        date_from
        date_to
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(report_users = nil,
                   date_from = SKIP,
                   date_to = SKIP)
      @date_from = date_from unless date_from == SKIP
      @date_to = date_to unless date_to == SKIP
      @report_users = report_users
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      report_users = nil
      unless hash['report_users'].nil?
        report_users = []
        hash['report_users'].each do |structure|
          report_users << (NewReportRequestReportUser.from_hash(structure) if structure)
        end
      end

      report_users = nil unless hash.key?('report_users')
      date_from = hash.key?('date_from') ? hash['date_from'] : SKIP
      date_to = hash.key?('date_to') ? hash['date_to'] : SKIP

      # Create object from extracted values.
      NewReportRequestFilter.new(report_users,
                                 date_from,
                                 date_to)
    end
  end
end
