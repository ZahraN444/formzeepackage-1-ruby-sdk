# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Form3PublicApi
  # AccountEventAttributes Model.
  class AccountEventAttributes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # ID of the account this event relates to
    # @return [UUID | String]
    attr_accessor :account_id

    # ID of the account this event relates to
    # @return [DateTime]
    attr_accessor :date_time

    # Contains the event description
    # @return [DescriptionEnum]
    attr_accessor :description

    # Failure reason. Should only be present when description is failed
    # @return [String]
    attr_accessor :reason

    # Contains the routing status
    # @return [RoutingStatusEnum]
    attr_accessor :routing_status

    # Contains the event status
    # @return [Status2Enum]
    attr_accessor :status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'account_id'
      @_hash['date_time'] = 'date_time'
      @_hash['description'] = 'description'
      @_hash['reason'] = 'reason'
      @_hash['routing_status'] = 'routing_status'
      @_hash['status'] = 'status'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        description
        reason
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_id = nil,
                   date_time = nil,
                   routing_status = nil,
                   status = nil,
                   description = SKIP,
                   reason = SKIP)
      @account_id = account_id
      @date_time = date_time
      @description = description unless description == SKIP
      @reason = reason unless reason == SKIP
      @routing_status = routing_status
      @status = status
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash.key?('account_id') ? hash['account_id'] : nil
      date_time = if hash.key?('date_time')
                    (DateTimeHelper.from_rfc3339(hash['date_time']) if hash['date_time'])
                  end
      routing_status =
        hash.key?('routing_status') ? hash['routing_status'] : nil
      status = hash.key?('status') ? hash['status'] : nil
      description = hash.key?('description') ? hash['description'] : SKIP
      reason = hash.key?('reason') ? hash['reason'] : SKIP

      # Create object from extracted values.
      AccountEventAttributes.new(account_id,
                                 date_time,
                                 routing_status,
                                 status,
                                 description,
                                 reason)
    end

    def to_custom_date_time
      DateTimeHelper.to_rfc3339(date_time)
    end
  end
end
