# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Form3PublicApi
  # ReportAdmissionAttributes Model.
  class ReportAdmissionAttributes < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :admission_datetime

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :scheme_status_code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :scheme_status_code_description

    # TODO: Write general description for this method
    # @return [ReportAdmissionStatusEnum]
    attr_accessor :status

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['admission_datetime'] = 'admission_datetime'
      @_hash['scheme_status_code'] = 'scheme_status_code'
      @_hash['scheme_status_code_description'] =
        'scheme_status_code_description'
      @_hash['status'] = 'status'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        admission_datetime
        scheme_status_code
        scheme_status_code_description
        status
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(admission_datetime = SKIP,
                   scheme_status_code = SKIP,
                   scheme_status_code_description = SKIP,
                   status = SKIP)
      @admission_datetime = admission_datetime unless admission_datetime == SKIP
      @scheme_status_code = scheme_status_code unless scheme_status_code == SKIP
      unless scheme_status_code_description == SKIP
        @scheme_status_code_description =
          scheme_status_code_description
      end
      @status = status unless status == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      admission_datetime = if hash.key?('admission_datetime')
                             (DateTimeHelper.from_rfc3339(hash['admission_datetime']) if hash['admission_datetime'])
                           else
                             SKIP
                           end
      scheme_status_code =
        hash.key?('scheme_status_code') ? hash['scheme_status_code'] : SKIP
      scheme_status_code_description =
        hash.key?('scheme_status_code_description') ? hash['scheme_status_code_description'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP

      # Create object from extracted values.
      ReportAdmissionAttributes.new(admission_datetime,
                                    scheme_status_code,
                                    scheme_status_code_description,
                                    status)
    end

    def to_custom_admission_datetime
      DateTimeHelper.to_rfc3339(admission_datetime)
    end
  end
end
