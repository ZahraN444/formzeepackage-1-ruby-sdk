# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # PlatformsecurityapiController
  class PlatformsecurityapiController < BaseController
    # Get a list of Signing Keys
    # @return [SigningKeysListResponse] response from the API call
    def get_a_list_of_signing_keys
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/platform/security/signing_keys',
                                     Server::DEFAULT)
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(SigningKeysListResponse.method(:from_hash))
                   .local_error('400',
                                'Bad Request',
                                ApiErrorException)
                   .local_error('403',
                                'Action Forbidden',
                                ApiErrorException)
                   .local_error('502',
                                'Bad Gateway',
                                ApiErrorException)
                   .local_error('default',
                                'Unexpected Error',
                                ApiErrorException))
        .execute
    end

    # Fetch a Signing Key
    # @param [UUID | String] signingkey_id Required parameter: Signing Key ID
    # @return [SigningKeysResponse] response from the API call
    def fetch_a_signing_key(signingkey_id)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/platform/security/signing_keys/{signingkey_id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(signingkey_id, key: 'signingkey_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('OAuth2')))
        .response(new_response_handler
                   .deserializer(APIHelper.method(:custom_type_deserializer))
                   .deserialize_into(SigningKeysResponse.method(:from_hash))
                   .local_error('400',
                                'Bad Request',
                                ApiErrorException)
                   .local_error('403',
                                'Action Forbidden',
                                ApiErrorException)
                   .local_error('404',
                                'Not Found',
                                ApiErrorException)
                   .local_error('502',
                                'Bad Gateway',
                                ApiErrorException)
                   .local_error('default',
                                'Unexpected Error',
                                ApiErrorException))
        .execute
    end
  end
end
