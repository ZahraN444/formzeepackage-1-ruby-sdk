# form3_public_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Form3PublicApi
  # Utility class for basic authorization.
  class Basic < CoreLibrary::HeaderAuth
    include CoreLibrary
    # Display error message on occurrence of authentication failure.
    # @returns [String] The oAuth error message.
    def error_message
      'Basic: username or password is undefined.'
    end

    # Initialization constructor.
    def initialize(basic_credentials)
      auth_params = {}
      unless basic_credentials.nil? ||
             basic_credentials.username.nil? ||
             basic_credentials.password.nil?
        auth_params['Authorization'] =
          "Basic #{AuthHelper.get_base64_encoded_value(basic_credentials.username,
                                                       basic_credentials.password)}"
      end

      super auth_params
    end
  end

  # Data class for BasicCredentials.
  class BasicCredentials
    attr_reader :username, :password

    def initialize(username:, password:)
      raise ArgumentError, 'username cannot be nil' if username.nil?
      raise ArgumentError, 'password cannot be nil' if password.nil?

      @username = username
      @password = password
    end

    def clone_with(username: nil, password: nil)
      username ||= self.username
      password ||= self.password

      BasicCredentials.new(username: username, password: password)
    end
  end
end
